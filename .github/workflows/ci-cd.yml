name: CI-CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # ---------- Code Quality ----------
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install linters
        run: |
          python -m pip install --upgrade pip
          pip install flake8 bandit

      - name: flake8 (uses .flake8 config)
        run: flake8 .

      - name: Security scan (Bandit, report only)
        run: bandit -r . || true

  # ---------- Tests ----------
  tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps + pytest
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run unit tests
        run: pytest tests/ -v

  # ---------- Build & Push Docker ----------
  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build image (tag with SHA and latest)
        run: |
          IMAGE="${{ secrets.DOCKER_USERNAME }}/fastapi-redis-tp"
          docker build -t "$IMAGE:${{ github.sha }}" -t "$IMAGE:latest" .
          echo "IMAGE=$IMAGE" >> "$GITHUB_ENV"

      - name: Smoke-run container
        run: |
          docker run -d -p 8000:8000 --name test_container "$IMAGE:${{ github.sha }}"
          sleep 5
          docker ps

      - name: Push images
        run: |
          docker push "$IMAGE:${{ github.sha }}"
          docker push "$IMAGE:latest"
